openapi: 3.0.1
info:
  title: 智能文档识别（抽取）-API文档
  description: 智能文档识别（抽取）-API文档
  version: 1.0.0

servers:
  - url: https://textin-sandbox.intsig.com
    description: Sandbox server
  - url: https://api.textin.com
    description: Production server

security:
  - AppIdAuth: []
    SecretCodeAuth: []
 
paths:
  /ai/service/v2/entity_extraction:
    post:
      summary: 智能文档抽取
      operationId: llm_uie
      description: |
        智能文档识别（抽取）-API
      parameters:
        - name: ie_type
          in: query
          description: |
            信息抽取类型，不传时默认为`close_ie`


            * `close_ie`：自定义key抽取模式，将会按url参数`key`与`table_header`的值进行信息抽取。

          schema:
            type: string
            example: close_ie
            enum:
              - close_ie
        - name: file_name
          in: query
          description: |
            待抽取样本的文件名（含后缀名）
          schema:
            type: string
            example: temp_file.jpg
        # - $ref: '#/components/parameters/XTiFormEnable'
      requestBody:
        description: |
          支持的文件格式：png, jpg, jpeg, doc, docx, pdf, ofd, xlsx, xls；
          
          * API支持的最大文档处理页数为100页，超出部分的文档信息将被忽略。

          * 支持两种模式：
            * prompt模式：
              * 提供一个prompt，系统将根据该prompt进行抽取；
              * 同时有prompt输入和key输入时，按prompt模式调用。
            * 自定义key模式：
              * 提供一个fields与table_fields列表，系统将根据该列表进行抽取。

          * API支持的最大抽取字段数量为`fields`数组中的元素数量与`table_fields`数组中每个对象的`fields`子数组的元素数量之和，总计不得超过`100`个字段。
          
          * 如果提供的字段总数超出限制，系统将优先抽取`fields`数组中的字段元素，超出部分的字段将被忽略。
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
                  description: |
                    待处理的文档文件
                prompt:
                  type: string
                  description: |
                    抽取的prompt，传入此字段时以下字段将会被忽略：
                      * `fields`
                      * `table_fields`
                fields:
                  type: string
                  description: |
                    待抽取的文本字段，JSON字符串格式
                    例如：["姓名","年龄"]
                table_fields:
                  type: string
                  description: |
                    表格抽取时要抽取的表格信息，JSON字符串格式
                    例如：[{"title":"学生成绩表","fields":["姓名","成绩"]}]


      responses:
        "200":
          description: JSON Data
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/CodeMessage"
                  - $ref: "#/components/schemas/CommonResult"
    
components:
  securitySchemes:
    AppIdAuth:
      type: apiKey
      in: header
      name: x-ti-app-id
      description: '请登录Textin后前往 "工作台-账号设置-开发者信息" 查看 x-ti-app-id'
    SecretCodeAuth:
      type: apiKey
      in: header
      name: x-ti-secret-code
      description: '请登录Textin后前往 "工作台-账号设置-开发者信息" 查看 x-ti-secret-code'
  parameters:
    XTiFormEnable:
      name: x-ti-form-enable
      in: header
      schema:
        type: string
        example: "1"
        default: "1"
        enum:
          - "1"
      description: 固定为1，启用formData模式
  schemas:
    FIELD_OBJ:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: 字段名
          example: "姓名"
        description:
          type: string
          description: 抽取时的prompt，非必填
    FIELD_OBJ_TABLE:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: 字段名
          example: "姓名"
    CodeMessage:
      type: object
      required:
        - version
        - code
        - message
      properties:
        version:
          example: v1.6.5
          type: string
          description: 版本号
        code:
          example: 200
          type: integer
          description: |
            错误码
            - 200: OK
            - 500: 服务器内部错误
            - 40303: 文件类型不支持
            - 40305: 识别文件未上传
          enum:
            - 200
            - 500
            - 40303
            - 40305
        message:
          type: string
          description: 错误信息
          example: success
    BoundingRegions:
      type: array
      description: 边界框信息
      items:
        properties:
          page_number: 
            type: integer
            description: 所在页码
          value: 
            type: string
            description: 文本内容
          position: 
            type: array
            description: 文本的坐标
            maximum: 8
            minimum: 0
            example: [343,56,459,56,459,90,343,90]
            items:
              type: integer
          char_pos:
            type: array
            description: 每个字符的坐标
            items:
              example: [343,56,459,56,459,90,343,90]
              type: array
              items:
                type: integer
                example: 343

    CommonLines:
      type: array
      description: 抽取结果的文本行信息
      items:
        type: object
        description: 文本行信息
        properties:
          page:
            type: integer
            description: 所在页数
            example: 0
          text:
            type: string
            description: 文本内容
            example: "example"
          pos:
            type: array
            description: 文本行坐标
            items:
              type: integer
              example: 100
              minimum: 0
            maxItems: 8
            minItems: 8
            example:
            - 100
            - 200
            - 200
            - 200
            - 300
            - 200
            - 100
            - 300
          angle:
            type: integer
            description: 文本行旋转角度
            example: 90
            minimum: 0
            maximum: 270
          char_pos:
            type: array
            description: 文本行字符坐标
            items:
              type: array
              description: 单字符坐标
              items:
                type: integer
                example: 100
                minimum: 0
              maxItems: 8
              minItems: 8
              example:
              - 100
              - 200
              - 200
              - 200
              - 300
              - 200
              - 100
              - 300
    CommonItem:
      properties:
        value:
          type: string
          example: 字段识别结果
          description: 字段识别结果
        position:
          maxItems: 8
          description: |
            文档被转正后，value在文档中的坐标，是一个长度为8的数组
            [0,1,2,3,4,5,6,7]
            - (0, 1) 左上角坐标
            - (2, 3) 右上角坐标
            - (4, 5) 右下角坐标
            - (6, 7) 左下角坐标
          items:
            type: integer
            example: 100
            minimum: 0
          minItems: 0
          example:
          - 100
          - 200
          - 200
          - 200
          - 300
          - 200
          - 100
          - 300
          type: array
        description:
          type: string
          example: 字段中文描述
          description: 字段中文描述
        lines:
          oneOf:
            - $ref: '#/components/schemas/CommonLines'
      type: object
      required:
      - value
    CommonResult:
      properties:
        duration:
          type: integer
          description: 推理时间(ms)
          example: 2825
        result:
          properties:
            # type:
            #   type: string
            #   example: ""
            #   description: |
            #     当前识别证件类型(暂未支持)
            llm_json:
              description: |
                大模型抽取处理后的原始抽取结果，仅当传入prompt参数时返回，返回简化的键值对结构，方便直接使用。
                
                由于使用大模型对用户输入的信息进行抽取，具体的字段名称和数据类型由用户的prompt决定，无法预先确定
              oneOf:
                - type: object
                  additionalProperties: true
                  example:
                    确认日期: "2024/4/3"
                    基金代码: "011892"
                    持仓金额: "74178.80"
                - type: array
                  items:
                    type: object
                    additionalProperties: true
            raw_json:
              description: |
                大模型抽取带坐标信息的抽取结果，仅当传入prompt参数时返回，包含详细的位置信息和边界框数据，用于高级处理场景。
                
                由于使用大模型对用户输入的信息进行抽取，具体的字段名称无法预先确定，但每个字段值都遵循统一的结构格式，包含抽取值、页码信息和详细的坐标数据

                - 注意这里写的object类型不是表示此字段是object，而是表示将llm_json中的字段值从string变成了以下object结构
                - 详情可参考下面json示例中的【示例1: prompt模式-返回对象】与【示例2: prompt模式-返回数组】部分
              required:
                - value
                - pages
              type: object
              properties:
                value:
                  type: string
                  description: |
                    字段的抽取值，即为llm_json中对应的字段值

                    示例："011892"
                  example: "011892"
                pages:
                  type: array
                  items:
                    type: integer
                    example: 1
                  description: |
                    字段所在的页码列表
                    
                    示例：[1]
                  example: [1]
                bounding_regions:
                  type: array
                  description: 字段的边界框信息，包含详细的位置和字符坐标
                  items:
                    type: object
                    required:
                      - position
                      - page_id
                      - value
                    properties:
                      position:
                        type: array
                        description: |
                          字段在文档中的坐标位置

                          示例：[201,199,308,199,308,230,201,230]
                        items:
                          type: integer
                          example: 201
                        example: [201,199,308,199,308,230,201,230]
                      char_pos:
                        type: array
                        description: |
                          每个字符的详细坐标信息

                          示例：[[202,202,218,201,218,230,201,229],[220,202,235,202,236,228,220,229]]
                        items:
                          type: array
                          items:
                            type: integer
                            example: 202
                        example: [[202,202,218,201,218,230,201,229],[220,202,235,202,236,228,220,229]]
                      page_id:
                        type: integer
                        description: |
                          所在页码ID

                          示例：1
                        example: 1
                      value:
                        type: string
                        description: |
                          该边界框内的文本内容

                          示例："011892"
                        example: "011892"
            category:
              type: object
              description: |
                `details`字段里的数据类型
                * one_to_one：表示单值抽取的key
                * item_list：表示表格的抽取
              additionalProperties:
                type: string
                enum: [one_to_one]
                example: one_to_one
                description: 虚拟字段，真实调用时为抽取的key
              properties:
                row:
                  type: string
                  enum: [item_list]
                  example: item_list
                  description: 表格类型
            rotated_image_width:
              exclusiveMinimum: true
              minimum: 0
              description: 正方向时文档的宽，仅文档为图片时其值有效
              example: 1000
              type: integer
            rotated_image_height:
              exclusiveMinimum: true
              minimum: 0
              description: 正方向时文档高，仅文档为图片时其值有效
              example: 2000
              type: integer
            page_count:
              exclusiveMinimum: true
              minimum: 1
              description: |
                智能文档抽取处理的文档页数，超过最大页数限制时（20页），返回为最大页数
              
              example: 10
              type: integer
            image_angle:
              type: integer
              enum:
              - 0
              - 90
              - 180
              - 270
              example: 90
              description: 文档角度，指原文档需要经过逆时针旋转多少度，才能得到正方向的文档，仅文档为图片时其值有效
            details:
              type: object
              description: 文档抽取结果
              additionalProperties:
                type: object
                allOf:
                  - $ref: "#/components/schemas/CommonItem"
              properties:
                row:
                  type: array
                  description: table_header的抽取结果
                  items:
                    type: object
                    description: 表格行数据
                    additionalProperties:
                      type: object
                      allOf:
                        - $ref: "#/components/schemas/CommonItem"
            detail_structure:
              type: array
              description: 字段的识别信息
              items:
                type: object
                description: 结构化抽取结果
                properties:
                  doc_type:
                    type: string
                    description: 文档的类型
                    example: "doc"
                  page_range:
                    type: array
                    description: 抽取的信息所在页范围
                    items:
                      type: integer
                      example: 1
                    example: [1, 2]
                  tables:
                    type: array
                    description: 表格信息
                    items:
                      type: object
                      properties:
                        position:
                          type: array
                          description: 坐标
                          maximum: 8
                          minimum: 0
                          example: [343,56,459,56,459,90,343,90]
                          items:
                            type: integer
                            example: 343
                        page_number:
                          type: number
                          description: 所在页
                          example: 1
                        text:
                          type: string
                          description: html形式的表格
                          example: "<table><tr><td>姓名</td><td>年龄</td></tr><tr><td>张三</td><td>18</td></tr></table>"
                  tables_relationship:
                    type: array
                    description: 表格的结构化信息
                    items:
                      type: object
                      properties:
                        row_count:
                          type: number
                          description: 行数
                          example: 2
                        column_count:
                          type: number
                          description: 列数
                          example: 2
                        cells:
                          type: array
                          description: 单元格信息
                          items:
                            type: object
                            additionalProperties:
                              type: object
                              properties:
                                value: 
                                  type: string
                                  description: 字段识别结果
                                  example: "张三"
                                bounding_regions:
                                  $ref: '#/components/schemas/BoundingRegions'
                        title:
                          type: string
                          description: title
                          example: "row"
                  category:
                    type: array
                    description: 结构化抽取出来的所有字段
                    example: ["标题","性别"]
                    items:
                      type: string
                      example: "标题"
                  fields:
                    type: object
                    description: 提取的字段结构化结果
                    additionalProperties:
                      type: array
                      items:
                        properties:
                          value: 
                            type: string
                            description: 字段识别结果
                            example: "张三"
                          bounding_regions:
                            $ref: '#/components/schemas/BoundingRegions'
                  stamps:
                    type: array
                    description: 印章识别结果
                    items:
                      properties:
                        color: 
                          type: string
                          description: |
                            当前印章颜色
                            - 红色
                            - 蓝色
                            - 黑色
                            - 其他
                          enum:
                            - 红色
                            - 蓝色
                            - 黑色
                            - 其他
                          example: "红色"
                        # image:
                        #   type: string
                        #   description: 印章图片被转为base64编码的字符串
                        position:
                          type: array
                          description: 印章的坐标信息
                          example: [956,583,1362,590,1355,990,950,983]
                          items:
                            type: integer
                            example: 10
                        stamp_shape:
                          type: string
                          description: |
                            当前印章形状
                            - 圆章
                            - 椭圆章
                            - 方章
                            - 三角章
                            - 菱形章
                            - 其他
                          enum:
                            - 圆章
                            - 椭圆章
                            - 方章
                            - 三角章
                            - 菱形章
                            - 其他
                          example: "圆章"
                        type:
                          type: string
                          description: |
                            当前印章类型
                            - 公章
                            - 个人章
                            - 专用章
                            - 其他
                            - 合同专用章
                            - 财务专用章
                            - 发票专用章
                            - 业务专用章
                          enum:
                            - 公章
                            - 个人章
                            - 专用章
                            - 其他
                            - 合同专用章
                            - 财务专用章
                            - 发票专用章
                            - 业务专用章
                          example: 公章
                        value:
                          type: string
                          description: 印章的文本内容
                          example: "电力公司专用章"
            finish_reason:
              type: string
              description: |
                推理结束的原因
                * stop：正常推理结束
                * length：token超出限制而结束
              enum:
                - "stop"
                - "length"
              example: "stop"
            documents:
              type: array
              description: 文档每一页的文档元素信息
              items:
                type: array
                items:
                  properties:
                    page_id:
                      type: integer
                      description: 所在页
                      example: 0
                    position:
                      type: array
                      description: 坐标信息
                      example: [956,583,1362,590,1355,990,950,983]
                      items:
                        type: integer
                        example: 10
                    paragraph_id:
                      type: integer
                      description: 当前段落id
                      example: 10
                    type:
                      type: string
                      description: |
                        当前元素的类型
                        - paragraph：段落类型，包括正文、标题、公式等文字信息
                        - image：图片
                        - table：表格，当为表格时，text里存储的为表格的html信息
                      enum:
                        - paragraph
                        - image
                        - table
                      example: paragraph
                    text:
                      type: string
                      description: 文字信息

          type: object
          required:
          - details
          - category
          - image_angle
          - rotated_image_width
          - rotated_image_height
          - detail_structure
          - documents
          - finish_reason
      type: object
